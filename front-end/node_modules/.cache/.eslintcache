[{"C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\index.js":"1","C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\App.js":"3","C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\routes\\Login.js":"4","C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\routes\\Edit.js":"5","C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\routes\\View.js":"6","C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\components\\LoginPage.js":"7","C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\containers\\ViewPageContainer.js":"8","C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\containers\\EditPageContainer.js":"9","C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\components\\ViewButtons.js":"10","C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\components\\ViewTable.js":"11","C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\components\\EditTable.js":"12","C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\components\\EditButtons.js":"13"},{"size":586,"mtime":1655696772854,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1655696772857,"results":"16","hashOfConfig":"15"},{"size":757,"mtime":1655696772840,"results":"17","hashOfConfig":"15"},{"size":196,"mtime":1655696772861,"results":"18","hashOfConfig":"15"},{"size":147,"mtime":1655696772860,"results":"19","hashOfConfig":"15"},{"size":149,"mtime":1655696772863,"results":"20","hashOfConfig":"15"},{"size":2453,"mtime":1655696772846,"results":"21","hashOfConfig":"15"},{"size":3851,"mtime":1656045624023,"results":"22","hashOfConfig":"15"},{"size":4812,"mtime":1656134582201,"results":"23","hashOfConfig":"15"},{"size":16713,"mtime":1655696772847,"results":"24","hashOfConfig":"15"},{"size":13375,"mtime":1656046281020,"results":"25","hashOfConfig":"15"},{"size":28506,"mtime":1656046344933,"results":"26","hashOfConfig":"15"},{"size":10404,"mtime":1655696772843,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9gec8i",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\index.js",[],[],"C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\reportWebVitals.js",[],[],"C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\App.js",[],[],"C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\routes\\Login.js",[],[],"C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\routes\\Edit.js",[],[],"C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\routes\\View.js",[],[],"C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\components\\LoginPage.js",[],[],"C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\containers\\ViewPageContainer.js",["69"],[],"import { useState, useEffect } from \"react\";\r\nimport ViewButtons from \"../components/ViewButtons\";\r\nimport ViewTable from \"../components/ViewTable\";\r\nconst ViewContainer = () => {\r\n    const [startTime, setStartTime] = useState({ startYear: \"\", startMonth: \"\", startDay: \"\" });\r\n    const [endTime, setEndTime] = useState({ endYear: \"\", endMonth: \"\", endDay: \"\" });\r\n    const [timeRange, setTimeRange] = useState([]);\r\n    const [viewMode, setViewMode] = useState(\"normal\");\r\n    const [chosenType, setChosenType] = useState(-1);\r\n\r\n    const initialDatas = [\r\n        {\r\n            eventName: \"Apple\",\r\n            typeId: 1,\r\n            yearMonthDay: \"20200530\",\r\n            startTime: \"\",\r\n            endTime: \"\",\r\n            locationId: 0,\r\n            cost: 50,\r\n            mood: \"Happy\",\r\n            country: \"Taiwan\",\r\n            city: \"Taipei\",\r\n            street: \"BackStreet\",\r\n            building: \"\"\r\n        },\r\n        {\r\n            eventName: \"Banana\",\r\n            typeId: 2,\r\n            yearMonthDay: \"20210601\",\r\n            startTime: \"\",\r\n            endTime: \"\",\r\n            locationId: 1,\r\n            cost: 50,\r\n            mood: \"Happy\",\r\n            country: \"Taiwan\",\r\n            city: \"Taipei\",\r\n            street: \"BackStreet\",\r\n            building: \"\"\r\n        },\r\n        {\r\n            eventName: \"Candy\",\r\n            typeId: 3,\r\n            yearMonthDay: \"20220405\",\r\n            startTime: \"\",\r\n            endTime: \"\",\r\n            locationId: 2,\r\n            cost: 50,\r\n            mood: \"Happy\",\r\n            country: \"Taiwan\",\r\n            city: \"Taipei\",\r\n            street: \"BackStreet\",\r\n            building: \"\"\r\n        },\r\n        {\r\n            eventName: \"Dance\",\r\n            typeId: 4,\r\n            yearMonthDay: \"20220220\",\r\n            startTime: \"\",\r\n            endTime: \"\",\r\n            locationId: 3,\r\n            cost: 50,\r\n            mood: \"Happy\",\r\n            country: \"Taiwan\",\r\n            city: \"Taipei\",\r\n            street: \"BackStreet\",\r\n            building: \"\"\r\n        }\r\n    ];\r\n    const [datas, setDatas] = useState([]);\r\n    const [chosenData, setChosenData] = useState({});\r\n    const [cost, setCost] = useState(null);\r\n    const [keywordDatas, setKeywordDatas] = useState([]);\r\n\r\n    const fetchDatas = async () => {\r\n        try {\r\n            const data = await fetch(\"http://localhost:5000/view\");\r\n            const json = await data.json();\r\n            json.forEach(data => {\r\n                for (let oldKey in data) {\r\n                    let temp;\r\n                    temp = oldKey.split(\"_\");\r\n                    let newKey = temp[0].toLocaleLowerCase();\r\n                    temp.forEach((word, index) => {\r\n                        if(index > 0){\r\n                            word = word[0].toUpperCase() + word.slice(1);\r\n                            newKey += word;\r\n                        }\r\n                    });\r\n                    data[newKey] = data[oldKey];\r\n                }\r\n            })\r\n            setDatas(json);\r\n        }\r\n        catch (err) {\r\n            console.log(\"err in fetching datas\", err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDatas();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <ViewButtons startTime={startTime} setStartTime={setStartTime} endTime={endTime} setEndTime={setEndTime} setViewMode={setViewMode} setTimeRange={setTimeRange} datas={datas} chosenType={chosenType} setChosenType={setChosenType} cost={cost} setCost={setCost} setKeywordDatas={setKeywordDatas} />\r\n            <ViewTable datas={datas} setDatas={setDatas} startTime={startTime} endTime={endTime} viewMode={viewMode} timeRange={timeRange} chosenData={chosenData} setChosenData={setChosenData} chosenType={chosenType} keywordDatas={keywordDatas} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewContainer;","C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\containers\\EditPageContainer.js",["70","71","72"],[],"C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\components\\ViewButtons.js",[],[],"C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\components\\ViewTable.js",[],[],"C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\components\\EditTable.js",["73"],[],"import Table from 'react-bootstrap/Table';\r\nimport Stack from \"react-bootstrap/Stack\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst EditTable = ({ datas, setDatas, chosenData, setChosenData, locations, setLocations, types, setTypes, locationMax, setLocationMax, viewMode, keywordDatas }) => {\r\n\r\n    const handleSelect = (id, data) => {\r\n        const selectedCircle = document.querySelector(`#${id}`);\r\n        if (data === chosenData) {\r\n            setChosenData({});\r\n            selectedCircle.style.backgroundColor = \"transparent\";\r\n            selectedCircle.style.borderColor = \"#000\";\r\n            return;\r\n        }\r\n        const allCircles = document.querySelectorAll(\".circle\");\r\n        allCircles.forEach(circle => {\r\n            circle.style.backgroundColor = \"transparent\";\r\n            circle.style.borderColor = \"#000\";\r\n        })\r\n        selectedCircle.style.backgroundColor = \"#BD3E5C\";\r\n        selectedCircle.style.borderColor = \"#BD3E5C\";\r\n        setChosenData(data);\r\n    }\r\n\r\n    const toggleWindow = (id) => {\r\n        const smallWindow = document.querySelector(`#${id}`);\r\n        if (smallWindow.style.display === \"none\") {\r\n            const smallWindows = document.querySelectorAll(\".smallWindow\");\r\n            smallWindows.forEach((smallWindow) => {\r\n                smallWindow.style.display = \"none\";\r\n                smallWindow.style.zIndex = \"-1\";\r\n            });\r\n            smallWindow.style.display = \"block\";\r\n            smallWindow.style.zIndex = \"2\";\r\n        }\r\n        else {\r\n            smallWindow.style.display = \"none\";\r\n            smallWindow.style.zIndex = \"-1\";\r\n        }\r\n    }\r\n\r\n    const handleUpdate = (data) => {\r\n        const updateContent = document.forms[\"updateContent\"].elements;\r\n        const updateContentContainer = document.querySelector(\"#updateContentContainer\");\r\n        updateContent.time0.value = data.yearMonthDay.slice(0, 4)\r\n        updateContent.time1.value = data.yearMonthDay.slice(4, 6)\r\n        updateContent.time2.value = data.yearMonthDay.slice(6, 8)\r\n        updateContent.locationId.value = data.locationId;\r\n        updateContent.country.value = data.country;\r\n        updateContent.city.value = data.city;\r\n        updateContent.street.value = data.street;\r\n        updateContent.building.value = data.building;\r\n        updateContent.eventName.value = data.eventName;\r\n        updateContent.typeId.value = data.typeId;\r\n        updateContent.cost.value = data.cost.toString();\r\n        updateContent.mood.value = data.mood;\r\n        updateContent.startTime.value = data.startTime;\r\n        updateContent.endTime.value = data.endTime;\r\n        toggleWindow(\"updateContentContainer\");\r\n        //updateContentContainer必須再打開一次\r\n        updateContentContainer.style.display = \"block\";\r\n        updateContentContainer.style.zIndex = \"2\";\r\n    }\r\n\r\n    const handleLocation = (event) => {\r\n        let elements;\r\n        if (event.target.id.includes(\"add\")) {\r\n            elements = document.forms[\"addContent\"].elements;\r\n        }\r\n        else {\r\n            elements = document.forms[\"updateContent\"].elements;\r\n        }\r\n        const value = event.target.value;\r\n\r\n        if (value === \"add\") {\r\n            elements.country.value = \"\";\r\n            elements.city.value = \"\";\r\n            elements.street.value = \"\";\r\n            elements.building.value = \"\";\r\n            elements.country.disabled = false;\r\n            elements.city.disabled = false;\r\n            elements.street.disabled = false;\r\n            elements.building.disabled = false;\r\n            let max = -1;\r\n            locations.forEach((location) => max = location.locationId > max ? location.locationId : max);\r\n            if (max >= 0) {\r\n                setLocationMax(max);\r\n            }\r\n        }\r\n        else {\r\n            locations.forEach((location) => {\r\n                if (location.locationId === parseInt(value)) {\r\n                    elements.country.value = location.country;\r\n                    elements.city.value = location.city;\r\n                    elements.street.value = location.street;\r\n                    elements.building.value = location.building;\r\n                    elements.country.disabled = true;\r\n                    elements.city.disabled = true;\r\n                    elements.street.disabled = true;\r\n                    elements.building.disabled = true;\r\n                    return;\r\n                }\r\n            })\r\n            setLocationMax(-1);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let elements;\r\n        if (event.target.id.includes(\"add\")) {\r\n            elements = document.forms[\"addContent\"].elements;\r\n        }\r\n        else {\r\n            elements = document.forms[\"updateContent\"].elements;\r\n        }\r\n        const newData = {\r\n            eventName: elements.eventName.value,\r\n            typeId: parseInt(elements.typeId.value),\r\n            yearMonthDay: elements.time0.value + elements.time1.value + elements.time2.value,\r\n            startTime: elements.startTime.value,\r\n            endTime: elements.endTime.value,\r\n            locationId: elements.typeId.value,\r\n            cost: parseInt(elements.cost.value),\r\n            mood: elements.mood.value,\r\n            country: elements.country.value,\r\n            city: elements.city.value,\r\n            street: elements.street.value,\r\n            building: elements.building.value\r\n        };\r\n        const newDatas = [...datas]\r\n        newDatas.push(newData);\r\n\r\n        if (event.target.id.includes(\"add\")) {\r\n            setDatas(newDatas);\r\n            //call db to insert data\r\n            toggleWindow(\"addContentContainer\");\r\n        }\r\n        else if (event.target.id.includes(\"update\")) {\r\n            //call db to update data\r\n            let oldData;\r\n            datas.forEach((data) => {\r\n                if (data.eventName === elements.eventName.value && data.yearMonthDay === elements.time0.value + elements.time1.value + elements.time2.value) {\r\n                    oldData = data;\r\n                    return;\r\n                }\r\n            })\r\n            const result = { oldData: oldData, newData: newData };\r\n            toggleWindow(\"updateContentContainer\");\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ position: \"relative\", overflowY: \"auto\", height: \"25rem\", marginTop: \"3rem\" }}>\r\n                <Table striped bordered hover responsive variant='blue'\r\n                    style={{ margin: \"0 auto\", width: \"90%\", backgroundColor: \"#B9D8F5\" }}>\r\n                    <thead style={{ backgroundColor: \"#1F66AB\", color: \"#fff\", borderBottom: \"solid 3px #fff\" }}>\r\n                        <tr style={{ fontSize: \"1.5rem\" }}>\r\n                            <th>選取</th>\r\n                            <th>活動名稱（Event_name）</th>\r\n                            <th>年_月_日（Year_Month_Day）</th>\r\n                            <th>地點代號（Location_id）</th>\r\n                            <th>修改內容</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            viewMode === \"keyword\" ?\r\n                                keywordDatas.map((data, index) => {\r\n                                    if (data)\r\n                                        return (\r\n                                            <tr\r\n                                                key={index}\r\n                                                id={`editRow${index}`}\r\n                                                style={{ fontSize: \"1.4rem\", fontWeight: \"900\" }}\r\n                                            >\r\n                                                <td\r\n                                                    style={{ padding: \"0\" }}\r\n                                                    onClick={() => handleSelect(`circle${index}`, data)}>\r\n                                                    <div id={`circle${index}`}\r\n                                                        className=\"circle\"\r\n                                                        style={{ border: \"solid 3px #000\", borderRadius: \"50%\", width: \"1.5rem\", height: \"1.5rem\", margin: \"0.7rem auto\" }}>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>{data.eventName}</td>\r\n                                                <td>{data.yearMonthDay}</td>\r\n                                                <td>{data.locationId}</td>\r\n                                                <td style={{ textAlign: \"center\" }}>\r\n                                                    <p\r\n                                                        onClick={() => handleUpdate(data)}\r\n                                                        style={{ textDecoration: \"underline\", cursor: \"pointer\" }}\r\n                                                    >修改\r\n                                                    </p>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    return null;\r\n                                })\r\n                                :\r\n                                datas.map((data, index) => {\r\n                                    return (\r\n                                        <tr\r\n                                            key={index}\r\n                                            id={`editRow${index}`}\r\n                                            style={{ fontSize: \"1.4rem\", fontWeight: \"900\" }}\r\n                                        >\r\n                                            <td\r\n                                                style={{ padding: \"0\" }}\r\n                                                onClick={() => handleSelect(`circle${index}`, data)}>\r\n                                                <div id={`circle${index}`}\r\n                                                    className=\"circle\"\r\n                                                    style={{ border: \"solid 3px #000\", borderRadius: \"50%\", width: \"1.5rem\", height: \"1.5rem\", margin: \"0.7rem auto\" }}>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{data.eventName}</td>\r\n                                            <td>{data.yearMonthDay}</td>\r\n                                            <td>{data.locationId}</td>\r\n                                            <td style={{ textAlign: \"center\" }}>\r\n                                                <p\r\n                                                    onClick={() => handleUpdate(data)}\r\n                                                    style={{ textDecoration: \"underline\", cursor: \"pointer\" }}\r\n                                                >修改\r\n                                                </p>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n            <div className=\"smallWindow\" id=\"addContentContainer\"\r\n                style={{ position: \"absolute\", top: \"3rem\", left: \"15rem\", padding: \"2rem 4rem\", backgroundColor: \"#A9BDDD\", border: \"solid 2px #5271A1\", display: \"none\" }}\r\n            >\r\n                <p\r\n                    className=\"closeContent\"\r\n                    style={{ position: \"absolute\", top: \"0.5rem\", right: \"1rem\", cursor: \"pointer\", fontSize: \"1.5rem\" }}\r\n                    onClick={() => toggleWindow(\"addContentContainer\")}\r\n                >X\r\n                </p>\r\n                <Form name=\"addContent\">\r\n                    <fieldset>\r\n                        <Stack>\r\n                            <Stack direction=\"horizontal\" gap={2}>\r\n                                <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>時間：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"YYYY\" name=\"time0\" className=\"contentTime0\" />\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0\" }}>\\</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"MM\" name=\"time1\" className=\"contentTime1\" />\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0\" }}>\\</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"DD\" name=\"time2\" className=\"contentTime2\" />\r\n                                </Form.Group>\r\n                            </Stack>\r\n                            <Stack direction=\"horizontal\" gap={2} style={{ marginTop: \"1rem\" }}>\r\n                                <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>地點：（查詢已儲存的地點編號</p>\r\n                                <Form.Group>\r\n                                    <Form.Select\r\n                                        id=\"addContentLocationId\"\r\n                                        style={{ width: \"5rem\" }}\r\n                                        name=\"locationId\"\r\n                                        className=\"contentLocationId\"\r\n                                        onChange={handleLocation}\r\n                                    >\r\n                                        <option value=\"add\">新增</option>\r\n                                        {\r\n                                            locations.map((location, index) => {\r\n                                                return <option key={index} value={location.locationId}>{location.locationId}</option>\r\n\r\n                                            })\r\n                                        }\r\n                                    </Form.Select>\r\n                                </Form.Group>\r\n                                <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>）</p>\r\n                                {\r\n                                    locationMax >= 0 ?\r\n                                        <Stack direction=\"horizontal\" className=\"contentAddLocation\">\r\n                                            <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>（新增地點編號：</p>\r\n                                            <p style={{ margin: \"0\", fontSize: \"1.3rem\", textDecoration: \"underline\" }}>{locationMax + 1}</p>\r\n                                            <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>）</p>\r\n                                        </Stack>\r\n                                        : <></>\r\n                                }\r\n                            </Stack>\r\n                            <Stack direction=\"horizontal\" gap={2} style={{ marginTop: \"1rem\" }}>\r\n                                <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>國家：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"Country\" name=\"country\" className=\"contentCountry\" />\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0 0 0 1rem\" }}>城市：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"City\" name=\"city\" className=\"contentCity\" />\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0 0 0 1rem\" }}>街道：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"Street\" name=\"street\" className=\"contentStreet\" />\r\n                                </Form.Group>\r\n                            </Stack>\r\n                            <Stack direction=\"horizontal\" gap={2} style={{ marginTop: \"1rem\" }}>\r\n                                <p style={{ margin: \"0\", fontSize: \"1.3rem\", width: \"7rem\" }}>建築名稱：</p>\r\n                                <Form.Control placeholder=\"Building\" name=\"building\" style={{ width: \"10rem\", maxWidth: \"100%\" }} className=\"contentBuilding\"></Form.Control>\r\n                            </Stack>\r\n                            <p style={{ margin: \"1rem 0 0 0\", fontSize: \"1.3rem\" }}>事件：</p>\r\n                            <Stack direction=\"horizontal\" gap={2} style={{ marginTop: \"1rem\" }}>\r\n                                <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>事件名稱：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"Event_name\" name=\"eventName\" className=\"contentEventName\" />\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0 0 0 1rem\" }}>事件種類代號：</p>\r\n                                <Form.Group>\r\n                                    <Form.Select\r\n                                        style={{ width: \"5rem\" }}\r\n                                        name=\"typeId\"\r\n                                        className=\"contentTypeId\"\r\n                                    >\r\n                                        {\r\n                                            types.map((type, index) => {\r\n                                                return <option key={index} value={type.typeId}>{type.typeId}</option>\r\n\r\n                                            })\r\n                                        }\r\n                                    </Form.Select>\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0 0 0 1rem\" }}>花費：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"Cost\" name=\"cost\" className=\"contentCost\" />\r\n                                </Form.Group>\r\n                            </Stack>\r\n                            <Stack direction=\"horizontal\" gap={2} style={{ marginTop: \"1rem\" }}>\r\n                                <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>事件心情：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"Mood\" name=\"mood\" className=\"contentMood\" />\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0 0 0 1rem\" }}>開始時間：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"Start_time\" name=\"startTime\" className=\"contentStartTime\" />\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0 0 0 1rem\" }}>結束時間：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"End_time\" name=\"endTime\" className=\"contentEndTime\" />\r\n                                </Form.Group>\r\n                            </Stack>\r\n                            <Button\r\n                                id=\"addButton\"\r\n                                type=\"submit\"\r\n                                variant=\"primary\"\r\n                                style={{ width: \"5rem\", margin: \"1rem auto 0 auto\" }}\r\n                                onClick={handleSubmit}\r\n                            >套用\r\n                            </Button>\r\n                        </Stack>\r\n                    </fieldset>\r\n                </Form>\r\n            </div>\r\n            <div className=\"smallWindow\" id=\"updateContentContainer\"\r\n                style={{ position: \"absolute\", top: \"3rem\", left: \"15rem\", padding: \"2rem 4rem\", backgroundColor: \"#A9BDDD\", border: \"solid 2px #5271A1\", display: \"none\" }}\r\n            >\r\n                <p\r\n                    className=\"closeContent\"\r\n                    style={{ position: \"absolute\", top: \"0.5rem\", right: \"1rem\", cursor: \"pointer\", fontSize: \"1.5rem\" }}\r\n                    onClick={() => toggleWindow(\"updateContentContainer\")}\r\n                >X\r\n                </p>\r\n                <Form name=\"updateContent\">\r\n                    <fieldset>\r\n                        <Stack>\r\n                            <Stack direction=\"horizontal\" gap={2}>\r\n                                <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>時間：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"YYYY\" name=\"time0\" className=\"contentTime0\" />\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0\" }}>\\</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"MM\" name=\"time1\" className=\"contentTime1\" />\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0\" }}>\\</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"DD\" name=\"time2\" className=\"contentTime2\" />\r\n                                </Form.Group>\r\n                            </Stack>\r\n                            <Stack direction=\"horizontal\" gap={2} style={{ marginTop: \"1rem\" }}>\r\n                                <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>地點：（查詢已儲存的地點編號</p>\r\n                                <Form.Group>\r\n                                    <Form.Select\r\n                                        id=\"updateContentLocationId\"\r\n                                        style={{ width: \"5rem\" }}\r\n                                        name=\"locationId\"\r\n                                        className=\"contentLocationId\"\r\n                                        onChange={handleLocation}\r\n                                    >\r\n                                        <option value=\"add\">新增</option>\r\n                                        {\r\n                                            locations.map((location, index) => {\r\n                                                return <option key={index} value={location.locationId}>{location.locationId}</option>\r\n\r\n                                            })\r\n                                        }\r\n                                    </Form.Select>\r\n                                </Form.Group>\r\n                                <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>）</p>\r\n                                {\r\n                                    locationMax >= 0 ?\r\n                                        <Stack direction=\"horizontal\" className=\"contentAddLocation\">\r\n                                            <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>（新增地點編號：</p>\r\n                                            <p style={{ margin: \"0\", fontSize: \"1.3rem\", textDecoration: \"underline\" }}>{locationMax + 1}</p>\r\n                                            <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>）</p>\r\n                                        </Stack>\r\n                                        : <></>\r\n                                }\r\n                            </Stack>\r\n                            <Stack direction=\"horizontal\" gap={2} style={{ marginTop: \"1rem\" }}>\r\n                                <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>國家：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control disabled placeholder=\"Country\" name=\"country\" className=\"contentCountry\" />\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0 0 0 1rem\" }}>城市：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control disabled placeholder=\"City\" name=\"city\" className=\"contentCity\" />\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0 0 0 1rem\" }}>街道：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control disabled placeholder=\"Street\" name=\"street\" className=\"contentStreet\" />\r\n                                </Form.Group>\r\n                            </Stack>\r\n                            <Stack direction=\"horizontal\" gap={2} style={{ marginTop: \"1rem\" }}>\r\n                                <p style={{ margin: \"0\", fontSize: \"1.3rem\", width: \"7rem\" }}>建築名稱：</p>\r\n                                <Form.Control disabled placeholder=\"Building\" name=\"building\" style={{ width: \"10rem\", maxWidth: \"100%\" }} className=\"contentBuilding\"></Form.Control>\r\n                            </Stack>\r\n                            <p style={{ margin: \"1rem 0 0 0\", fontSize: \"1.3rem\" }}>事件：</p>\r\n                            <Stack direction=\"horizontal\" gap={2} style={{ marginTop: \"1rem\" }}>\r\n                                <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>事件名稱：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"Event_name\" name=\"eventName\" className=\"contentEventName\" disabled />\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0 0 0 1rem\" }}>事件種類代號：</p>\r\n                                <Form.Group>\r\n                                    <Form.Select\r\n                                        style={{ width: \"5rem\" }}\r\n                                        name=\"typeId\"\r\n                                        className=\"contentTypeId\"\r\n                                    >\r\n                                        {\r\n                                            types.map((type, index) => {\r\n                                                return <option key={index} value={type.typeId}>{type.typeId}</option>\r\n\r\n                                            })\r\n                                        }\r\n                                    </Form.Select>\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0 0 0 1rem\" }}>花費：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"Cost\" name=\"cost\" className=\"contentCost\" />\r\n                                </Form.Group>\r\n                            </Stack>\r\n                            <Stack direction=\"horizontal\" gap={2} style={{ marginTop: \"1rem\" }}>\r\n                                <p style={{ margin: \"0\", fontSize: \"1.3rem\" }}>事件心情：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"Mood\" name=\"mood\" className=\"contentMood\" />\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0 0 0 1rem\" }}>開始時間：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"Start_time\" name=\"startTime\" className=\"contentStartTime\" />\r\n                                </Form.Group>\r\n                                <p style={{ fontSize: \"1.5rem\", margin: \"0 0 0 1rem\" }}>結束時間：</p>\r\n                                <Form.Group>\r\n                                    <Form.Control placeholder=\"End_time\" name=\"endTime\" className=\"contentEndTime\" />\r\n                                </Form.Group>\r\n                            </Stack>\r\n                            <Button\r\n                                id=\"updateButton\"\r\n                                type=\"submit\"\r\n                                variant=\"primary\"\r\n                                style={{ width: \"5rem\", margin: \"1rem auto 0 auto\" }}\r\n                                onClick={handleSubmit}\r\n                            >套用\r\n                            </Button>\r\n                        </Stack>\r\n                    </fieldset>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditTable;","C:\\Users\\user\\Desktop\\projects\\Emotion_Diary\\front-end\\src\\components\\EditButtons.js",[],[],{"ruleId":"74","severity":1,"message":"75","line":11,"column":11,"nodeType":"76","messageId":"77","endLine":11,"endColumn":23},{"ruleId":"74","severity":1,"message":"75","line":6,"column":11,"nodeType":"76","messageId":"77","endLine":6,"endColumn":23},{"ruleId":"74","severity":1,"message":"78","line":64,"column":11,"nodeType":"76","messageId":"77","endLine":64,"endColumn":27},{"ruleId":"74","severity":1,"message":"79","line":94,"column":11,"nodeType":"76","messageId":"77","endLine":94,"endColumn":23},{"ruleId":"74","severity":1,"message":"80","line":149,"column":19,"nodeType":"76","messageId":"77","endLine":149,"endColumn":25},"no-unused-vars","'initialDatas' is assigned a value but never used.","Identifier","unusedVar","'initialLocations' is assigned a value but never used.","'initialTypes' is assigned a value but never used.","'result' is assigned a value but never used."]